{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"e",
				"epsilon\tparam"
			],
			[
				"dlz",
				"dLz_z"
			],
			[
				"max",
				"max_scale"
			],
			[
				"z",
				"z_scale\tstatement"
			],
			[
				"compu",
				"computedLz\tfunction"
			],
			[
				"d",
				"d2L\tparam"
			],
			[
				"conve",
				"convex\tstatement"
			],
			[
				"n",
				"n_padding\tstatement"
			],
			[
				"ca",
				"cas_4\tstatement"
			],
			[
				"plot",
				"plot_l\tfunction"
			],
			[
				"conv",
				"convex\tstatement"
			],
			[
				"_d",
				"_d2Lz\tstatement"
			],
			[
				"t",
				"_t_max\tstatement"
			],
			[
				"computeMa",
				"computeMaxEc\tfunction"
			],
			[
				"res",
				"results\tparam"
			],
			[
				"re",
				"result\tparam"
			],
			[
				"solver",
				"solver_tes\tfunction"
			],
			[
				"g",
				"gaussSolver\tclass"
			],
			[
				"dL",
				"dLz"
			],
			[
				"comp",
				"computeMaxE"
			],
			[
				"lin",
				"linspace\tfunction"
			],
			[
				"L",
				"L0\tstatement"
			],
			[
				"dLz",
				"dLz_z\tstatement"
			],
			[
				"Con",
				"Convex_approx\tclass"
			],
			[
				"data",
				"data_points"
			],
			[
				"test",
				"test_data_convexe_noise\tstatement"
			],
			[
				"Conve",
				"Convex_approx_1\tclass"
			],
			[
				"ex",
				"example_1\tstatement"
			],
			[
				"dis",
				"discrete_fprime\tfunction"
			],
			[
				"build",
				"build_x0\tfunction"
			],
			[
				"bui",
				"build_ineq_cons\tfunction"
			],
			[
				"b",
				"bounds\tstatement"
			],
			[
				"eq",
				"eq_cons\tstatement"
			],
			[
				"dista",
				"distance_jac"
			],
			[
				"buil",
				"build_x0\tfunction"
			],
			[
				"min",
				"min_der\tstatement"
			],
			[
				"distance",
				"distance_jac\tfunction"
			],
			[
				"ineq",
				"ineq_cons\tstatement"
			],
			[
				"jac",
				"jac_code\tstatement"
			],
			[
				"fun",
				"fun_code\tstatement"
			],
			[
				"cas",
				"cas_1\tstatement"
			],
			[
				"dl",
				"dLz_z\tstatement"
			],
			[
				"sigm",
				"sigma_chap\tstatement"
			],
			[
				"sig",
				"sigma_chap\tstatement"
			],
			[
				"__ne",
				"__nyq_secu\tstatement"
			],
			[
				"pro",
				"progbar\tmodule"
			],
			[
				"mat",
				"matplotlib\tmodule"
			],
			[
				"np",
				"numpy\tmodule"
			],
			[
				"r",
				"raw_dLz\tfunction"
			],
			[
				"Dl",
				"dLz\tstatement"
			],
			[
				"es",
				"estFreq\tfunction"
			],
			[
				"sign",
				"signalProcessing\tmodule"
			],
			[
				"de",
				"delay"
			],
			[
				"ripp",
				"ripple_db\tparam"
			],
			[
				"mio",
				"minorticks_on\tfunction"
			],
			[
				"Array",
				"array\tfunction"
			],
			[
				"col",
				"computeLz\tfunction"
			],
			[
				"mi_move",
				"mi_movetranslate\tfunction"
			],
			[
				"co",
				"computeL0\tfunction"
			],
			[
				"mo_get",
				"mo_getcircuitproperties\tfunction"
			],
			[
				"delete",
				"deleteProjectile\tfunction"
			],
			[
				"define",
				"defineProjectile\tfunction"
			],
			[
				"draw",
				"drawProjectile\tfunction"
			],
			[
				"mi_sel",
				"mi_selectgroup\tfunction"
			],
			[
				"mi_an",
				"mi_analyze\tfunction"
			],
			[
				"open",
				"openfemm\tfunction"
			],
			[
				"season",
				"season_id\tparam"
			],
			[
				"get_season",
				"get_season_by_id\tstatement"
			],
			[
				"match",
				"match_id\tparam"
			],
			[
				"show",
				"show_current\tfunction"
			],
			[
				"matche",
				"matchespending_stats"
			],
			[
				"ne",
				"new_match_id\tstatement"
			],
			[
				"matches_s",
				"matches_stats_controller\tmodule"
			],
			[
				"matches",
				"matches_controller\tmodule"
			],
			[
				"seasons",
				"seasons_matches\tmodule"
			],
			[
				"max_",
				"max_time"
			],
			[
				"sea",
				"season_id\tparam"
			],
			[
				"seas",
				"season_id"
			],
			[
				"tim",
				"timedelta\tclass"
			],
			[
				"date",
				"datetime\tmodule"
			],
			[
				"matchesp",
				"matchespending\tmodule"
			],
			[
				"get",
				"get_all_equal_teams\tfunction"
			],
			[
				"mu",
				"musigma_team"
			],
			[
				"create_us",
				"create_user_musigma\tstatement"
			],
			[
				"choi",
				"choices\tstatement"
			],
			[
				"find_e",
				"find_element_by_class_name\tfunction"
			],
			[
				"find",
				"find_elements_by_tag_name\tfunction"
			],
			[
				"indexe",
				"indexes\tparam"
			],
			[
				"ba",
				"BaseException\tclass"
			],
			[
				"API",
				"API_END_POINT\tstatement"
			],
			[
				"Trade",
				"TradierAuth\tclass"
			],
			[
				"Be",
				"BeautifulSoup\tclass"
			],
			[
				"Tra",
				"TradierAuth\tclass"
			],
			[
				"has",
				"hasDouble\tfunction"
			],
			[
				"is",
				"isPandigital\tfunction"
			],
			[
				"cir",
				"circular\tstatement"
			],
			[
				"ta",
				"table_num\tstatement"
			],
			[
				"tab",
				"tabToNumber\tfunction"
			],
			[
				"backgro",
				"background-image"
			],
			[
				"comme",
				"commentE"
			],
			[
				"proto",
				"prototype"
			],
			[
				"comm",
				"commentE"
			],
			[
				"renderer",
				"renderers"
			],
			[
				"idc",
				"idct_img\tfunction"
			],
			[
				"bl",
				"blocks_to_img\tfunction"
			],
			[
				"dct",
				"dct_blocks\tfunction"
			],
			[
				"save",
				"save_img\tfunction"
			],
			[
				"sa",
				"save_img\tfunction"
			],
			[
				"img_",
				"img_to_blocks\tfunction"
			],
			[
				"im",
				"img_b\tparam"
			],
			[
				"dct_8",
				"dct_8x8\tfunction"
			],
			[
				"dc",
				"Dct"
			],
			[
				"scra",
				"scrap_number\tstatement"
			],
			[
				"lis",
				"listings_raw\tstatement"
			],
			[
				"mess",
				"mess"
			],
			[
				"max_si",
				"max_simultaneous_requests\tparam"
			],
			[
				"scr",
				"scrap_number\tstatement"
			],
			[
				"a",
				"appendVisual"
			],
			[
				"mul",
				"multiScrap\tstatement"
			],
			[
				"Airbnb",
				"Airbnb_scrapper\tmodule"
			],
			[
				"scrapProc",
				"ScrapProcessor\tclass"
			],
			[
				"da",
				"dataExport\tparam"
			],
			[
				"stra",
				"strategyLocker\tparam"
			],
			[
				"Thre",
				"ThreadedScrapAirbnb\tclass"
			],
			[
				"Air",
				"Airbnb_scrapper\tmodule"
			],
			[
				"Boo",
				"Booking_scrapper\tmodule"
			],
			[
				"Threa",
				"ThreadedScrap\tclass"
			],
			[
				"Scra",
				"ScrapProcessor\tclass"
			]
		]
	},
	"buffers":
	[
		{
			"file": "coilCalculator.py",
			"settings":
			{
				"buffer_size": 10757,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "import pyFEMM"
			}
		},
		{
			"file": "example.py",
			"settings":
			{
				"buffer_size": 21270,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "pltHelper.py",
			"settings":
			{
				"buffer_size": 757,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 3173,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "splinify.py",
			"settings":
			{
				"buffer_size": 865,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "solver.py",
			"settings":
			{
				"buffer_size": 6274,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "import scipy.integrate as int"
			}
		},
		{
			"file": "convexApprox.py",
			"settings":
			{
				"buffer_size": 7469,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "datastore.py",
			"settings":
			{
				"buffer_size": 2033,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"su",
				"SublimeREPL: Python"
			],
			[
				"replpyt",
				"SublimeREPL: Python"
			],
			[
				"replpy",
				"SublimeREPL: Python"
			],
			[
				"pyt",
				"SublimeREPL: Python"
			],
			[
				"rep py",
				"SublimeREPL: Python"
			],
			[
				"repl p",
				"SublimeREPL: Python"
			],
			[
				"sublimerepl py",
				"SublimeREPL: Python"
			],
			[
				"repl pyt",
				"SublimeREPL: Python"
			],
			[
				"repl vi",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"sub",
				"SublimeREPL: Python"
			],
			[
				"viru",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"repl pyth",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"subli",
				"SublimeREPL: Python"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"anac",
				"Anaconda: Enable linting on this file"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"linter",
				"Anaconda: Next lint error"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Set Syntax: Python"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 416.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Projets/CG",
		"/F/Projets/CG/old",
		"/F/Projets/CG/stylelib"
	],
	"file_history":
	[
		"/F/Projets/CG/.gitignore",
		"/F/Projets/CG/old/signalProcessing.py",
		"/F/Projets/CG/pltHelper.py",
		"/F/Projets/CG/signalProcessing_interp1d.py",
		"/F/Projets/CG/store.h5",
		"/F/Projets/CG/datastore.py",
		"/F/Projets/CG/signalProcessing_univariatespline.py",
		"/F/Projets/CG/signalProcessing.py",
		"/F/Projets/CG/tchebychev.py",
		"/F/Projets/CG/progbar.py",
		"/F/Projets/CG/stylelib/switch.mplstyle",
		"/F/Projets/CG/coilgun.sublime-project",
		"/C/Users/Faame/AppData/Local/Temp/coilgun/coilgun.py",
		"/F/Projets/CG/example.py",
		"/C/Users/Faame/AppData/Roaming/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/C/Users/Faame/AppData/Roaming/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/F/Projets/Gauss/FEMM/codefemm.lua",
		"/F/Projets/CG/switch.mplstyle",
		"/C/Users/Faame/dev/ekitag-backend/timedelta.py",
		"/C/Users/Faame/dev/ekitag-backend/parsers.py",
		"/C/Users/Faame/dev/ekitag-backend/musigma.py",
		"/C/Users/Faame/dev/ekitag-backend/config.py",
		"/F/Projets/CG/temp.poly",
		"/C/Users/Faame/dev/ekitag-backend.sublime-project",
		"/C/Users/Faame/Desktop/Tradier/Getter",
		"/C/Users/Faame/Desktop/flaskServerFake/chatProcessing.py",
		"/F/Projets/Gauss/FEMM/OutputFEMM.txt",
		"/F/Projets/Gauss/FEMM/output.txt",
		"/C/Users/Faame/dev/ekitag-backend/orm.py",
		"/C/Users/Faame/dev/ekitag-backend/server.py",
		"/C/Users/Faame/dev/ekitag-backend/run.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/seasons_matches.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/matchespending_stats.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/seasons.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/matches.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/matchespending.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/matches_stats.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/admin.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/users_matches.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/users.py",
		"/C/Users/Faame/dev/ekitag-backend/controllers/__init__.py",
		"/C/Users/Faame/dev/ekitag-backend/secret.yml",
		"/C/Users/Faame/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/C/Users/Faame/Desktop/flaskServerFake/desolate-depths-98145/runtime.txt",
		"/C/Users/Faame/Desktop/flaskServerFake/damp-peak-16095/index.js",
		"/C/Users/Faame/Desktop/flaskServerFake/desolate-depths-98145/requirements.txt",
		"/C/Users/Faame/Desktop/flaskServerFake/desolate-depths-98145/app.py",
		"/C/Users/Faame/Desktop/flaskServerFake/app.py",
		"/C/Users/Faame/Desktop/lol.py",
		"/C/Users/Faame/Desktop/test/36.pandigital.py",
		"/C/Users/Faame/Desktop/test/35.circularprimes.py",
		"/C/Users/Faame/Desktop/test/app.js",
		"/C/Users/Faame/Desktop/test/test.css",
		"/C/Users/Faame/Desktop/test/index.html",
		"/C/Users/Faame/Desktop/hot.js",
		"/C/Users/Faame/Desktop/test.html",
		"/C/Users/Faame/Desktop/Cours ECP 2017/Signal Processing/td 9/code_tp_3_sp.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/Signal Processing/td 9/td compress.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/Signal Processing/td 9/out.bmp",
		"/C/Users/Faame/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/MultiScrapper.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Scrapper.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Airbnb_scrapper.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Booking_scrapper.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Booking_scrapper_oliv.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Scrapper_oliv.py",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Raws/B23_05_2017_13_52_10_235112",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Raws/A23_05_2017_15_15_01_484953",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/Raws/A23_05_2017_15_13_56_746574",
		"/C/Users/Faame/Desktop/Cours ECP 2017/HnF/legit/scrapp/B2_23_2017_13_45_22_835304"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 278.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"resis",
			"mu",
			"space",
			"__i0",
			"dLz",
			"i0",
			"print",
			"moving",
			"print",
			"wire_type",
			"resis",
			"cas",
			"mu",
			"raw_dLz",
			"prog",
			"computeLz",
			",",
			"b",
			"\t",
			"pseudo",
			"b",
			"hold",
			"']",
			"args['",
			"']",
			"args['",
			"b",
			"print",
			"team",
			"sender",
			"token",
			"firs",
			"createThreadedScrap",
			"ThreadedScrapBooking",
			" ",
			"<^.>",
			"\\n",
			"\\t",
			"35.circularprimes.py",
			"35.circularprimes",
			"editors",
			"golombdecoder",
			"verbose",
			"autoforma",
			"threading"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"coil",
			"\\n",
			"solo",
			"\",\"",
			"\","
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "coilCalculator.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10757,
						"regions":
						{
						},
						"selection":
						[
							[
								1637,
								1637
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "import pyFEMM",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 104.0,
						"translation.y": 317.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21270,
						"regions":
						{
						},
						"selection":
						[
							[
								371,
								237
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pltHelper.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 757,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								56
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3173,
						"regions":
						{
						},
						"selection":
						[
							[
								536,
								536
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 902.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "splinify.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 865,
						"regions":
						{
						},
						"selection":
						[
							[
								565,
								565
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "solver.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6274,
						"regions":
						{
						},
						"selection":
						[
							[
								3323,
								3323
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"auto_name": "import scipy.integrate as int",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 52.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "convexApprox.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7469,
						"regions":
						{
						},
						"selection":
						[
							[
								154,
								154
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "datastore.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2033,
						"regions":
						{
						},
						"selection":
						[
							[
								1478,
								1478
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 210.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.451651880684,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 125.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "coilgun.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 174.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
